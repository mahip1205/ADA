#include <iostream>
#include <vector>
#include <climits>

using namespace std;

void generateGraph(vector<vector<int>>& cost, int n) {
    cout << "Enter number of edges: ";
    int edges;
    cin >> edges;

    int i, j, w;
    for (int k = 0; k < edges; k++) {
        cout << "Enter i, j: ";
        cin >> i >> j;
        cout << "Enter weight: ";
        cin >> w;
        cost[i][j] = w;
    }
}

void dijkstra(int source, vector<vector<int>>& cost, int n, vector<int>& dist, vector<int>& parent) {
    vector<bool> visited(n, false);
    dist[source] = 0;

    for (int count = 0; count < n - 1; count++) {
        int u = -1, minDist = INT_MAX;

        for (int i = 0; i < n; i++) {
            if (!visited[i] && dist[i] < minDist) {
                minDist = dist[i];
                u = i;
            }
        }

        if (u == -1) break;
        visited[u] = true;

        for (int v = 0; v < n; v++) {
            if (!visited[v] && cost[u][v] && dist[u] != INT_MAX && dist[u] + cost[u][v] < dist[v]) {
                dist[v] = dist[u] + cost[u][v];
                parent[v] = u;
            }
        }
    }

    cout << "\nShortest distances from source " << source << ":\n";
    for (int i = 0; i < n; i++) {
        cout << "To " << i << " : " << (dist[i] == INT_MAX ? -1 : dist[i]) << endl;
    }

    cout << "\nPaths:\n";
    for (int i = 0; i < n; i++) {
        if (dist[i] == INT_MAX) {
            cout << "No path to " << i << endl;
            continue;
        }

        cout << "Path to " << i << ": ";
        vector<int> path;
        for (int v = i; v != -1; v = parent[v]) {
            path.push_back(v);
        }
        for (int k = path.size() - 1; k >= 0; k--) {
            cout << path[k] << (k ? " -> " : "");
        }
        cout << endl;
    }
}

int main() {
    int n;
    cout << "Enter number of vertices: ";
    cin >> n;

    vector<vector<int>> cost(n, vector<int>(n, 0));
    generateGraph(cost, n);

    int source;
    cout << "Enter source: ";
    cin >> source;

    vector<int> dist(n, INT_MAX);
    vector<int> parent(n, -1);

    dijkstra(source, cost, n, dist, parent);

    return 0;
}
